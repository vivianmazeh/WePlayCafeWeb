{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/auth.service\";\nexport class LoginComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.username = '';\n    this.password = '';\n    this.errorMessage = '';\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 2,\n    vars: 0,\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"login works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","authService","username","password","errorMessage","_","i0","ɵɵdirectiveInject","i1","AuthService","_2","selectors","decls","vars","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\Vivian\\git\\WePlayCafeWeb\\src\\app\\Components\\login\\login.component.ts","C:\\Users\\Vivian\\git\\WePlayCafeWeb\\src\\app\\Components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { AuthService } from '../../service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n\r\n  username = '';\r\n  password = '';\r\n  errorMessage = '';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  // login(): void {\r\n  //   this.authService.login(this.username, this.password).subscribe(\r\n  //     response => {\r\n  //       // Handle successful login (store token, navigate, etc.)\r\n  //     },\r\n  //     error => {\r\n  //       this.errorMessage = 'Login failed. Please check your credentials.';\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n}\r\n","<p>login works!</p>\r\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAMzBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAJ/B,KAAAC,QAAQ,GAAG,EAAE;IACb,KAAAC,QAAQ,GAAG,EAAE;IACb,KAAAC,YAAY,GAAG,EAAE;EAE8B;EAAC,QAAAC,CAAA,G;qBANrCN,cAAc,EAAAO,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdX,cAAc;IAAAY,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR3BV,EAAA,CAAAY,cAAA,QAAG;QAAAZ,EAAA,CAAAa,MAAA,mBAAY;QAAAb,EAAA,CAAAc,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}